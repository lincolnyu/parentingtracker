<UserControl
    x:Class="ParentingTrackerApp.Views.TrackingViewOld"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ParentingTrackerApp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Base.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="EditorRow" Height=".3*" MinHeight="150"/>
            <RowDefinition x:Name="RunningRow" Height=".2*" MinHeight="60"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height=".5*" MinHeight="60"/>
        </Grid.RowDefinitions>
        <StackPanel Name="Editor" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
                    Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
            <StackPanel DataContext="{Binding EventInEditing}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <TextBlock>Event type:</TextBlock>
                        <ComboBox ItemsSource="{Binding EventTypes}" SelectedItem="{Binding EventType, Mode=TwoWay}"
                              IsEnabled="{Binding IsEditingOrRunning}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name, Mode=OneWay}" 
                                   Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <Button Grid.Column="1" Click="CloseEditorOnClick">X</Button>
                </Grid>
                <TextBlock>Notes</TextBlock>
                <TextBox Text="{Binding Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsEnabled="{Binding IsEditingOrRunning}"></TextBox>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"></ColumnDefinition>
                        <ColumnDefinition MaxWidth="300"></ColumnDefinition>
                        <ColumnDefinition MaxWidth="300"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Start" Grid.Row="0" Grid.Column="0"></TextBlock>
                    <DatePicker Grid.Row="0" Grid.Column="1" IsEnabled="{Binding IsEditingOrRunning}"
                            Date="{Binding StartDate, Mode=TwoWay}"></DatePicker>
                    <TimePicker Grid.Row="0" Grid.Column="2" IsEnabled="{Binding IsEditingOrRunning}"
                            Time="{Binding StartTimeOfDay, Mode=TwoWay}"></TimePicker>
                    <TextBlock Text="End" Grid.Row="1" Grid.Column="0"></TextBlock>
                    <DatePicker Grid.Row="1" Grid.Column="1" IsEnabled="{Binding IsEditing}"
                            Date="{Binding EndDate, Mode=TwoWay}"></DatePicker>
                    <TimePicker Grid.Row="1" Grid.Column="2" IsEnabled="{Binding IsEditing}"
                            Time="{Binding EndTimeOfDay, Mode=TwoWay}"></TimePicker>
                </Grid>
            </StackPanel>
        </StackPanel>
        <TextBlock Grid.Row="1" Grid.Column="0">Running:</TextBlock>
        <ListView Grid.Row="1" Grid.Column="1" Name="RunningEventsList"
                  ItemsSource="{Binding RunningEvents}" 
                  SelectedItem="{Binding SelectedRunningEvent, Mode=TwoWay}"
                  SelectionMode="Single"
                  ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding EventTypeName}" Foreground="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"></TextBlock>
                        <TextBlock>: </TextBlock>
                        <TextBlock Text="{Binding RunningTime}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
            <Button Click="NewOnClick">New</Button>
            <Button Click="StartOnClick">Start</Button>
            <Button Visibility="{Binding CanStop, Converter={StaticResource BoolToVisibilityConverter}}" Click="StopOnClick">Stop</Button>
            <Button Visibility="{Binding CanStop, Converter={StaticResource BoolToVisibilityConverter}}" Click="CancelOnClick">Cancel</Button>
            <Button Visibility="{Binding IsCreating, Converter={StaticResource BoolToVisibilityConverter}}" Click="LogOnClick">Just Add</Button>
        </StackPanel>
        <TextBlock Grid.Row="3" Grid.Column="0">Logged:</TextBlock>
        <ListView Grid.Row="3" Grid.Column="1" Name="LoggedEventsList"
                  ItemsSource="{Binding LoggedEvents}"
                  SelectedItem="{Binding SelectedLoggedEvent, Mode=TwoWay}"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Loaded="LoggedEntryGridOnLoaded">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                            <TextBlock Text="{Binding LocalisedTimeRange}" Margin="5,0,5,0"></TextBlock>
                            <TextBlock Text="{Binding EventTypeName}" Margin="5,0,5,0"></TextBlock>
                        </StackPanel>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Notes}" Margin="5,0,5,0"></TextBlock>
                        <StackPanel Grid.Row="0" Grid.RowSpan="2" 
                                    Grid.Column="1" Orientation="Horizontal">
                            <Button Name="RemoveButton" Content="&#xE106;" FontFamily="Segoe UI Symbol"
                                Click="RemoveLoggedOnClick" 
                                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"></Button>
                            <ToggleButton Name="EditButton" Content="&#xE104;" FontFamily="Segoe UI Symbol"
                                          IsChecked="{Binding IsEditing, Mode=TwoWay}"></ToggleButton>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</UserControl>
