<UserControl
    x:Class="ParentingTrackerApp.Views.TrackingView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ParentingTrackerApp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:ParentingTrackerApp.Converters"
    mc:Ignorable="d"
    DataContextChanged="DataContextOnChanged"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Base.xaml"/>
                <ResourceDictionary>
                    <converters:EventTemplateSelector x:Key="EventTemplateSelector"
                                      RunningEventDataTemplate="{StaticResource RunningEventDataTemplate}"
                                      LoggedEventDataTemplate="{StaticResource LoggedEventDataTemplate}"/>
                    <DataTemplate x:Key="RunningEventDataTemplate">
                        <Grid>
                            <Border Background="{Binding Color, Converter={StaticResource ColorToBrushConverter}}">
                                <RichTextBlock IsTextSelectionEnabled="False">
                                    <Paragraph>
                                        <Bold>
                                            <Underline>
                                                <Run Text="{Binding EventTypeName}"></Run>
                                            </Underline>
                                            <Run Text="{Binding RunningTime}"></Run>
                                        </Bold>
                                    </Paragraph>
                                    <Paragraph>
                                        <Italic>
                                            <Run Text="{Binding Notes}"></Run>
                                        </Italic>
                                    </Paragraph>
                                </RichTextBlock>
                            </Border>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="LoggedEventDataTemplate">
                        <Grid DataContextChanged="GridDataContextOnChanged">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Border Background="{Binding Color, Converter={StaticResource ColorToBrushConverter}}">
                                    <RichTextBlock IsTextSelectionEnabled="False">
                                        <Paragraph>
                                            <Run Text="{Binding LocalisedTimeRange}"></Run>
                                            <Underline>
                                                <Run Text="{Binding EventTypeName}"></Run>
                                            </Underline>
                                        </Paragraph>
                                        <Paragraph>
                                            <Italic>
                                                <Run Text="{Binding Notes}"></Run>
                                            </Italic>
                                        </Paragraph>
                                    </RichTextBlock>
                                </Border>
                            </Grid>
                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                <Button Name="RemoveButton" Content="&#xE106;" FontFamily="Segoe UI Symbol"
                                        Width="40" PointerEntered="RedHighlightButtonOnPointerEntered" PointerExited="RedHighlightButtonOnPointerExited"
                                        Click="RemoveLoggedOnClick" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <ToolTipService.ToolTip>
                                        <TextBlock Text="Remove the event"></TextBlock>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <ToggleButton Name="EditButton" Content="&#xE104;" FontFamily="Segoe UI Symbol" 
                                              Width="40" IsChecked="{Binding IsEditing, Mode=TwoWay}">
                                    <ToolTipService.ToolTip>
                                        <TextBlock Text="Edit the event"></TextBlock>
                                    </ToolTipService.ToolTip>
                                </ToggleButton>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="EditorRow"/>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Name="Editor" Grid.Row="0"
                    Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid DataContext="{Binding EventInEditing}" DataContextChanged="EditorOnDataContextChanged">
                <Grid Background="{Binding Color, Converter={StaticResource ColorToBrushConverter}}">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"></Setter>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="70"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <TextBlock>Event type</TextBlock>
                            <ComboBox Name="SillyBox" ItemsSource="{Binding EventTypes}" SelectedItem="{Binding EventType, Mode=TwoWay}"
                              IsEnabled="{Binding IsEditingOrRunning}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name, Mode=OneWay}"></TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <Button Grid.Column="1" Click="CloseEditorOnClick" Content="X" Background="Transparent" BorderBrush="Transparent">
                            <ToolTipService.ToolTip>
                                <TextBlock Text="Close the editor"></TextBlock>
                            </ToolTipService.ToolTip>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0">Notes</TextBlock>
                        <TextBox Grid.Column="1" Text="{Binding Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsEnabled="{Binding IsEditingOrRunning}"></TextBox>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"></RowDefinition>
                            <RowDefinition Height="35"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Start" Grid.Row="0" Grid.Column="0"></TextBlock>
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1">
                            <Button Content="{Binding StartTime, Converter={StaticResource DateTimeToDateStringConverter}}"
                                Click="DateTimeButtonOnClick" IsEnabled="{Binding IsEditingOrRunning}">
                                <FlyoutBase.AttachedFlyout>
                                    <DatePickerFlyout Date="{Binding StartDate, Mode=TwoWay}">
                                    </DatePickerFlyout>
                                </FlyoutBase.AttachedFlyout>
                            </Button>
                            <Button Content="{Binding StartTime, Converter={StaticResource DateTimeToTimeStringConverter}}"
                                Click="DateTimeButtonOnClick"  IsEnabled="{Binding IsEditingOrRunning}">
                                <FlyoutBase.AttachedFlyout>
                                    <TimePickerFlyout Time="{Binding StartTimeOfDay, Mode=TwoWay}">
                                    </TimePickerFlyout>
                                </FlyoutBase.AttachedFlyout>
                            </Button>
                        </StackPanel>
                        <TextBlock Text="End" Grid.Row="1" Grid.Column="0"></TextBlock>
                        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
                            <Button Content="{Binding EndTime, Converter={StaticResource DateTimeToDateStringConverter}}"
                                Click="DateTimeButtonOnClick" IsEnabled="{Binding IsEditing}">
                                <FlyoutBase.AttachedFlyout>
                                    <DatePickerFlyout Date="{Binding EndDate, Mode=TwoWay}">
                                    </DatePickerFlyout>
                                </FlyoutBase.AttachedFlyout>
                            </Button>
                            <Button Content="{Binding EndTime, Converter={StaticResource DateTimeToTimeStringConverter}}"
                                Click="DateTimeButtonOnClick"  IsEnabled="{Binding IsEditing}">
                                <FlyoutBase.AttachedFlyout>
                                    <TimePickerFlyout Time="{Binding EndTimeOfDay, Mode=TwoWay}">
                                    </TimePickerFlyout>
                                </FlyoutBase.AttachedFlyout>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="80"></Setter>
                </Style>
            </StackPanel.Resources>
            <Button Click="NewOnClick">New</Button>
            <Button Visibility="{Binding IsCreating, Converter={StaticResource BoolToVisibilityConverter}}" Click="StartOnClick">Start</Button>
            <Button Visibility="{Binding CanStop, Converter={StaticResource BoolToVisibilityConverter}}" Click="StopOnClick">Stop</Button>
            <Button Visibility="{Binding CanStop, Converter={StaticResource BoolToVisibilityConverter}}" Click="CancelOnClick"
                    Name="Cancel" Content="Cancel" PointerEntered="RedHighlightButtonOnPointerEntered" PointerExited="RedHighlightButtonOnPointerExited">
            </Button>
            <Button Visibility="{Binding IsCreating, Converter={StaticResource BoolToVisibilityConverter}}" Click="LogOnClick">Just Add</Button>
            <Border Background="Yellow" Height="25" Margin="30,0,0,0" >
                <TextBlock Foreground="Red" VerticalAlignment="Center" Text="&#xE2C0;" FontFamily="Segoe UI Symbol" >
                <ToolTipService.ToolTip>
                    <TextBlock TextWrapping="Wrap" Text="If you click start, it starts from the present time. However, you can always edit the details of an event later."/>
                </ToolTipService.ToolTip>
            </TextBlock>
            </Border>
        </StackPanel>
        <ListView Grid.Row="2" Name="EventsList"
                  ItemsSource="{Binding AllEvents}"
                  SelectedItem="{Binding SelectedEvent, Mode=TwoWay}"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ItemTemplateSelector="{StaticResource EventTemplateSelector}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</UserControl>
